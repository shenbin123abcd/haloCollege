/* RESET */
.cf { *zoom: 1; }

.cf:before { content: ""; display: table; line-height: 0; }

.cf:after { content: ""; display: table; line-height: 0; clear: both; }

.lsn { margin: 0; list-style: none; }

.ios textarea::-webkit-input-placeholder { /* WebKit browsers */ text-indent: -0.5px; }

.ios textarea:-moz-placeholder { /* Mozilla Firefox 4 to 18 */ text-indent: -0.5px; }

.ios textarea::-moz-placeholder { /* Mozilla Firefox 19+ */ text-indent: -0.5px; }

.ios textarea:-ms-input-placeholder { /* Internet Explorer 10+ */ text-indent: -0.5px; }

.ios .form-control { -webkit-appearance: none; }

.without-number-spin[type=number]::-webkit-inner-spin-button, .without-number-spin[type=number]::-webkit-outer-spin-button { -webkit-appearance: none; margin: 0; }

body { font-family: Arial, Verdana, Tahoma, "Hiragino Sans GB", Microsoft YaHei, SimSun, sans-serif; }

h1, h2, h3, h4, h5, h6 { font-family: Arial, Verdana, Tahoma, "Hiragino Sans GB", Microsoft YaHei, SimHei, SimSun, sans-serif; }

@keyframes haloIcon-spin { 0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); } }

.haloIcon-spin { animation: haloIcon-spin 2s infinite linear; }

.haloIcon-pulse { animation: haloIcon-spin 1s infinite steps(8); }

body { font-size: 14px; line-height: 1.5; background: transparent; }

@keyframes pulse { from { -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1); }
  50% { -webkit-transform: scale3d(1.1, 1.1, 1.1);
    transform: scale3d(1.1, 1.1, 1.1); }
  to { -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1); } }

.f-9 { font-size: 9px; }

.f-10 { font-size: 10px; }

.f-11 { font-size: 11px; }

.f-12 { font-size: 12px; }

.f-13 { font-size: 13px; }

.f-14 { font-size: 14px; }

.f-15 { font-size: 15px; }

.f-16 { font-size: 16px; }

.f-17 { font-size: 17px; }

.f-20 { font-size: 20px; }

.detail-page { background: #f6f6f6; margin-bottom: 50px; }

.detail-page .bg-gap { height: 15px; background: #f6f6f6; width: 100%; }

.detail-page .detail-top .detail-bg { width: 100%; position: relative; }

.detail-page .detail-top .detail-bg img.bg-img { width: 100%; }

.detail-page .detail-top .detail-bg .teacher-desc { position: absolute; top: 50%; transform: translateY(-50%); color: #fff; font-weight: 700; left: 15px; }

.detail-page .detail-top .detail-bg .sign-block { position: absolute; top: 15px; left: 15px; border-radius: 17px/17px 17px 18px 18px; background-color: #2f2117; min-width: 155px; height: 18px; line-height: 18px; color: #fff; padding: 0 10px; text-align: center; }

.detail-page .detail-top .detail-desc { padding: 18px; background: #fff; }

.detail-page .detail-top .detail-desc .desc-content { color: #333333; }

.detail-page .detail-top .detail-desc .desc-tag { width: 42px; height: 17px; border-radius: 5px 0; background-color: #16c2af; box-shadow: 0 3px 4px rgba(0, 130, 116, 0.24); color: #fff; text-align: center; margin-top: 5px; }

.detail-page .deatil-middle { padding: 18px; background: #fff; margin-top: 15px; width: 100%; }

.detail-page .deatil-middle .sign-num-block .sign-num-block-left { float: left; color: #333333; }

.detail-page .deatil-middle .sign-num-block .sign-num-block-left .haloIcon { color: #999999; position: relative; top: 2px; }

.detail-page .deatil-middle .sign-num-block .sign-num-block-right { float: right; color: #aaaaaa; }

.detail-page .deatil-middle .sign-num-block .sign-num-block-right .haloIcon { color: #aaaaaa; position: relative; top: 3px; left: -2px; font-size: 20px; }

.detail-page .class-desc-block { padding: 18px; background: #fff; margin-top: 15px; width: 100%; display: flex; }

.detail-page .class-desc-block .class-desc-item { flex: 0 0 25%; }

.detail-page .class-desc-block .class-desc-item:last-child .item-icon-wrapper .border-right { display: none; }

.detail-page .class-desc-block .class-desc-item .item-icon-wrapper { position: relative; }

.detail-page .class-desc-block .class-desc-item .item-icon-wrapper .border-right { position: absolute; right: 0; height: 65%; transform: translateY(-50%); top: 50%; width: 1px; background: #d7d7d7; }

.detail-page .class-desc-block .class-desc-item .desc-item-icon { width: 40px; height: 40px; border-radius: 50%; margin: auto; position: relative; }

.detail-page .class-desc-block .class-desc-item .desc-item-icon .haloIcon { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 28px; color: #fff; }

.detail-page .class-desc-block .class-desc-item .desc-item-icon.item1 { background-color: #fa7167; box-shadow: 0 2px 6px rgba(179, 12, 0, 0.3); }

.detail-page .class-desc-block .class-desc-item .desc-item-icon.item2 { background-color: #fdc753; box-shadow: 0 2px 6px rgba(196, 134, 0, 0.3); }

.detail-page .class-desc-block .class-desc-item .desc-item-icon.item3 { background-color: #4ed6a4; box-shadow: 0 2px 6px rgba(0, 120, 76, 0.3); }

.detail-page .class-desc-block .class-desc-item .desc-item-icon.item4 { background-color: #4ec8f1; box-shadow: 0 2px 6px rgba(0, 124, 165, 0.3); }

.detail-page .class-desc-block .class-desc-item .desc-item-content { text-align: center; margin-top: 8px; }

.detail-page .class-desc-block .class-desc-item .desc-item-content .item1 { color: #fa7167; }

.detail-page .class-desc-block .class-desc-item .desc-item-content .item2 { color: #f5b429; }

.detail-page .class-desc-block .class-desc-item .desc-item-content .item3 { color: #4ed6a4; }

.detail-page .class-desc-block .class-desc-item .desc-item-content .item4 { color: #4ec8f1; }

.detail-page .teacher-desc-block { padding: 18px; background: #fff; margin-top: 15px; width: 100%; }

.detail-page .teacher-desc-block .desc-title { position: relative; vertical-align: middle; padding-left: 12px; color: #333333; margin-bottom: 15px; }

.detail-page .teacher-desc-block .desc-title .line { position: absolute; background: #fe5a40; height: 75%; left: 0; top: 50%; transform: translateY(-50%); width: 2.5px; }

.detail-page .teacher-desc-block .desc-content { text-align: center; }

.detail-page .teacher-desc-block .desc-content .content { color: #999999; text-align: left; }

.detail-page .teacher-desc-block .desc-content .content.text-hidden { height: 57px; overflow: hidden; display: -webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 3; }

.detail-page .teacher-desc-block .desc-content .see-more-btn { color: #999999; font-size: 12px; margin-top: 6px; padding-bottom: 0; }

.detail-page .teacher-desc-block .desc-content .see-more-btn .haloIcon { position: relative; top: 1px; font-size: 13px; }

.detail-page .content-block { padding: 18px; background: #fff; margin-top: 15px; width: 100%; }

.detail-page .content-block .desc-title { position: relative; vertical-align: middle; padding-left: 12px; color: #333333; margin-bottom: 15px; }

.detail-page .content-block .desc-title .line { position: absolute; background: #fe5a40; height: 75%; left: 0; top: 50%; transform: translateY(-50%); width: 2.5px; }

.detail-page .content-block .desc-content { width: 100%; }

.detail-page .content-block .desc-content .desc-content-img { width: 100%; margin-bottom: 15px; }

.detail-page .interview-block { padding: 18px 15px; background: #fff; margin-top: 15px; width: 100%; }

.detail-page .interview-block .desc-title { position: relative; vertical-align: middle; padding-left: 15px; color: #333333; margin-bottom: 15px; }

.detail-page .interview-block .desc-title .line { position: absolute; background: #fe5a40; height: 75%; left: 3px; top: 50%; transform: translateY(-50%); width: 2.5px; }

.detail-page .interview-block .desc-list-block { display: flex; }

.detail-page .interview-block .desc-list-block .list-block-item { flex: 0 0 33.3333333%; padding: 0 3px; }

.detail-page .interview-block .desc-list-block .list-block-item .item-cover { width: 100%; display: block; }

.detail-page .interview-block .desc-list-block .list-block-item .item-desc { text-align: center; color: #666666; margin-top: 5px; }

.detail-page .flex-bottom-btn { position: fixed; bottom: 0; height: 50px; line-height: 50px; display: flex; width: 100%; text-align: center; }

.detail-page .flex-bottom-btn .choose-seat-btn { background: #fff; color: #fe5a40; flex: 0 0 35%; }

.detail-page .flex-bottom-btn .enter-btn { flex: 0 0 65%; }

.detail-page .flex-bottom-btn .enter-btn.able { background: #ff654d; color: #fff; }

.detail-page .flex-bottom-btn .enter-btn.disable { background: #d5d5d5; color: #999999; }

/*# sourceMappingURL=data:application/json;base64, */
